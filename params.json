{"name":"Aho-corasick.js","tagline":"JavaScript implementation of the Aho-Corasick string matching algorithm","body":"\r\n\r\nAbout [![Build Status](https://travis-ci.org/tombooth/aho-corasick.js.png?branch=master)](https://travis-ci.org/tombooth/aho-corasick.js)\r\n-------------------------------------\r\nA Javascript implementation of the [Aho-Corasick algorithm](http://cisc-w09.isrl.kr/cgi-bin/TUBoard/db/seminar/upload/1183356194165246034173/p333-aho-corasick.pdf). It has one difference in that it will return the longest possible match.\r\n\r\nInstallation\r\n-------------------------------------\r\n```\r\n$ npm install aho-corasick.js\r\n```\r\n\r\nUsage\r\n-------------------------------------\r\n```javascript\r\nvar AhoCorasick = require('aho-corasick.js'),\r\n    trie = new AhoCorasick.TrieNode();\r\n\r\n['ab', 'bcr', 'caa'].forEach(function(word) { trie.add(word, { word: word }); });\r\n\r\nAhoCorasick.add_suffix_links(trie);\r\n\r\nAhoCorasick.search('foab', trie, function(found_word, data) {\r\n   console.log(found_word, data);\r\n});\r\n```\r\n\r\nLinks\r\n-------------------------------------\r\nCoffeescript port by @hsujian https://github.com/hsujian/aho-corasick\r\n\r\n\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}